/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 25-Dec-2010, 3:20:45 PM
 */

package ControlPanel;


import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.border.EmptyBorder;

import javax.swing.JComboBox;
import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import java.awt.FlowLayout;
import javax.swing.SwingConstants;
import java.awt.SystemColor;
import javax.swing.UIManager;
import javax.swing.BoxLayout;
import javax.swing.JTextField;
import java.awt.Font;
import javax.swing.JLabel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;

public class GUI extends javax.swing.JFrame {
	
	
	private JPanel contentPane;
	public JComboBox cboxPorts;
	
    //Communicator object
    Communicator communicator = null;
    //KeybindingController object
  //  KeybindingController keybindingController = null;

    /** Creates new form GUI */
    public GUI() {
        initComponents();
        createObjects();
        communicator.searchForPorts();
      //  keybindingController.toggleControls();
       // keybindingController.bindKeys();
    }

    private void createObjects()
    {
        communicator = new Communicator(this);
        //keybindingController = new KeybindingController(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	setTitle("Sonde Settings");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 800, 600);
		contentPane = new JPanel();
		contentPane.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		contentPane.setBorder(new EmptyBorder(0, 0, 0, 0));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel.setBounds(10, 42, 564, 79);
		contentPane.add(panel);
		panel.setLayout(null);
		
		cboxPorts = new JComboBox();
		cboxPorts.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		cboxPorts.setBounds(0, 10, 66, 21);
		panel.add(cboxPorts);
		
		JButton connect = new JButton("Connect");
		connect.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				btnConnectActionPerformed(e);
			}
		});
		connect.setBounds(95, 9, 93, 23);
		panel.add(connect);
		
		JButton disconnect = new JButton("Disconnect");
		disconnect.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		disconnect.setBounds(227, 9, 93, 23);
		panel.add(disconnect);
		
	
		
		
		
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel_1.setBounds(10, 157, 636, 56);
		contentPane.add(panel_1);
		panel_1.setLayout(new BoxLayout(panel_1, BoxLayout.X_AXIS));
		
		JCheckBox chckbxNewCheckBox = new JCheckBox("DO");
		chckbxNewCheckBox.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel_1.add(chckbxNewCheckBox);
		
		JCheckBox chckbxNewCheckBox_1 = new JCheckBox("PH");
		chckbxNewCheckBox_1.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel_1.add(chckbxNewCheckBox_1);
		
		JCheckBox chckbxNewCheckBox_2 = new JCheckBox("RTD");
		chckbxNewCheckBox_2.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel_1.add(chckbxNewCheckBox_2);
		
		JCheckBox chckbxNewCheckBox_3 = new JCheckBox("EC");
		chckbxNewCheckBox_3.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel_1.add(chckbxNewCheckBox_3);
		
		JCheckBox chckbxNewCheckBox_4 = new JCheckBox("TP");
		chckbxNewCheckBox_4.setBackground(UIManager.getColor("InternalFrame.inactiveBorderColor"));
		panel_1.add(chckbxNewCheckBox_4);
		
		JButton btnNewButton = new JButton("Comfirm");
		panel_1.add(btnNewButton);
		
		JLabel lblNewLabel = new JLabel("Select Sensors");
		lblNewLabel.setBounds(10, 122, 93, 38);
		contentPane.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("Select Serial Port");
		lblNewLabel_1.setBounds(10, 10, 117, 29);
		contentPane.add(lblNewLabel_1);
       


                
                pack();
            }// </editor-fold>//GEN-END:initComponents

  

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        communicator.connect();
        if (communicator.getConnected() == true)
        {
            if (communicator.initIOStream() == true)
            {
                communicator.initListener();
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        communicator.disconnect();
    }//GEN-LAST:event_btnDisconnectActionPerformed
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables

    // End of variables declaration//GEN-END:variables
}
